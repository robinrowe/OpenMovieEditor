// generated by Fast Light User Interface Designer (fluid) version 1.0107

#include "ColorGrader2.h"

void ColorGrader2::cb_editor_red_i(CurveEditor2*, void*) {
  m_dialog->read_values();
}
void ColorGrader2::cb_editor_red(CurveEditor2* o, void* v) {
  ((ColorGrader2*)(o->parent()))->cb_editor_red_i(o,v);
}

void ColorGrader2::cb_editor_green_i(CurveEditor2*, void*) {
  m_dialog->read_values();
}
void ColorGrader2::cb_editor_green(CurveEditor2* o, void* v) {
  ((ColorGrader2*)(o->parent()))->cb_editor_green_i(o,v);
}

void ColorGrader2::cb_editor_blue_i(CurveEditor2*, void*) {
  m_dialog->read_values();
}
void ColorGrader2::cb_editor_blue(CurveEditor2* o, void* v) {
  ((ColorGrader2*)(o->parent()))->cb_editor_blue_i(o,v);
}

void ColorGrader2::cb_editor_master_i(CurveEditor2*, void*) {
  m_dialog->read_values();
}
void ColorGrader2::cb_editor_master(CurveEditor2* o, void* v) {
  ((ColorGrader2*)(o->parent()))->cb_editor_master_i(o,v);
}

void ColorGrader2::cb_bypass_check_i(Fl_Check_Button*, void*) {
  m_dialog->read_values();
}
void ColorGrader2::cb_bypass_check(Fl_Check_Button* o, void* v) {
  ((ColorGrader2*)(o->parent()))->cb_bypass_check_i(o,v);
}
ColorGrader2::ColorGrader2(int X, int Y, int W, int H, const char *L)
  : Fl_Group(X, Y, W, H, L) {
  ColorGrader2 *o = this;
o->align(FL_ALIGN_TOP_LEFT);
{ CurveEditor2* o = editor_red = new CurveEditor2(5, 20, 145, 145, "Red");
  o->box(FL_DOWN_BOX);
  o->color(FL_BACKGROUND_COLOR);
  o->selection_color(FL_BACKGROUND_COLOR);
  o->labeltype(FL_NORMAL_LABEL);
  o->labelfont(1);
  o->labelsize(14);
  o->labelcolor((Fl_Color)1);
  o->callback((Fl_Callback*)cb_editor_red);
  o->align(FL_ALIGN_TOP_LEFT);
  o->when(FL_WHEN_RELEASE);
}
{ CurveEditor2* o = editor_green = new CurveEditor2(155, 20, 145, 145, "Green");
  o->box(FL_DOWN_BOX);
  o->color(FL_BACKGROUND_COLOR);
  o->selection_color(FL_BACKGROUND_COLOR);
  o->labeltype(FL_NORMAL_LABEL);
  o->labelfont(1);
  o->labelsize(14);
  o->labelcolor((Fl_Color)2);
  o->callback((Fl_Callback*)cb_editor_green);
  o->align(FL_ALIGN_TOP_LEFT);
  o->when(FL_WHEN_RELEASE);
}
{ CurveEditor2* o = editor_blue = new CurveEditor2(305, 20, 145, 145, "Blue");
  o->box(FL_DOWN_BOX);
  o->color(FL_BACKGROUND_COLOR);
  o->selection_color(FL_BACKGROUND_COLOR);
  o->labeltype(FL_NORMAL_LABEL);
  o->labelfont(1);
  o->labelsize(14);
  o->labelcolor((Fl_Color)4);
  o->callback((Fl_Callback*)cb_editor_blue);
  o->align(FL_ALIGN_TOP_LEFT);
  o->when(FL_WHEN_RELEASE);
}
{ CurveEditor2* o = editor_master = new CurveEditor2(455, 20, 145, 145, "Master");
  o->box(FL_DOWN_BOX);
  o->color(FL_BACKGROUND_COLOR);
  o->selection_color(FL_BACKGROUND_COLOR);
  o->labeltype(FL_NORMAL_LABEL);
  o->labelfont(1);
  o->labelsize(14);
  o->labelcolor(FL_FOREGROUND_COLOR);
  o->callback((Fl_Callback*)cb_editor_master);
  o->align(FL_ALIGN_TOP_LEFT);
  o->when(FL_WHEN_RELEASE);
}
{ Fl_Check_Button* o = bypass_check = new Fl_Check_Button(5, 170, 85, 25, "Bypass");
  o->down_box(FL_DOWN_BOX);
  o->callback((Fl_Callback*)cb_bypass_check);
}
end();
}
