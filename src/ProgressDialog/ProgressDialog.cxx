// generated by Fast Light User Interface Designer (fluid) version 1.0107

#include "ProgressDialog.h"

void ProgressDialog::cb_cancel_button_i(Fl_Button*, void*) {
  cancel = true;
cancel_button->deactivate();
}
void ProgressDialog::cb_cancel_button(Fl_Button* o, void* v) {
  ((ProgressDialog*)(o->parent()->user_data()))->cb_cancel_button_i(o,v);
}

ProgressDialog::ProgressDialog( const char* title ) {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = progressDialog = new Fl_Double_Window(335, 145, "Progress Dialog");
    w = o;
    o->user_data((void*)(this));
    { Fl_Button* o = cancel_button = new Fl_Button(240, 115, 90, 25, "Cancel");
      o->callback((Fl_Callback*)cb_cancel_button);
      w->hotspot(o);
    }
    { Fl_Progress* o = progress_bar = new Fl_Progress(40, 75, 255, 25);
      o->selection_color((Fl_Color)5);
    }
    { Fl_Box* o = title_box = new Fl_Box(0, 5, 335, 30, "Loading Project...");
      o->labelfont(1);
      o->labelsize(16);
    }
    { Fl_Output* o = time_display = new Fl_Output(10, 40, 315, 25);
      o->box(FL_FLAT_BOX);
      o->color(FL_BACKGROUND_COLOR);
      o->textsize(11);
    }
    o->set_modal();
    o->end();
  }
  progress_bar->minimum( 0.0 );
progress_bar->maximum( 1.0 );
progress_bar->value( 0.0 );
title_box->label( title );
}

ProgressDialog::~ProgressDialog() {
  delete progressDialog;
}

bool ProgressDialog::progress( double percent ) {
  timeval now;
gettimeofday( &now, 0 );
double elapsed = (now.tv_sec - m_start.tv_sec) + ( (now.tv_usec - m_start.tv_usec) * (1.0 / CLOCKS_PER_SEC) );
double remaining = elapsed / progress_bar->value() - elapsed + 1.0f;
int es, em, eh, rs, rm, rh;

nle::secs2HMS( elapsed, eh, em, es );
nle::secs2HMS( remaining, rh, rm, rs );

char buf[128];
sprintf( buf, "Elapsed Time: %03d:%02d:%02d Remaining Time: %03d:%02d:%02d", eh, em, es, rh, rm, rs );

progress_bar->value( percent );
time_display->value( buf );
Fl::check();
return cancel;
}

void ProgressDialog::start() {
  cancel = false;
progressDialog->show();
gettimeofday( &m_start, 0 );
}

void ProgressDialog::end() {
  progressDialog->hide();
}
